package board.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import db.DBManager;

public class CommentsDAO {
	DBManager dbManager = new DBManager();
	//insert
		public int insert(Comments comments) {
			PreparedStatement pstmt = null;
			Connection con = null;
			int result = 0;
			String sql = "insert into comments(news_id, author, cdate, msg) values(?,?,?,?)";
			
			con = dbManager.getConnection();
			try {
				pstmt = con.prepareStatement(sql);
				pstmt.setInt(1, comments.getNews_id());
				pstmt.setString(2, comments.getAuthor());
				pstmt.setString(3, comments.getCdate());
				pstmt.setString(4, comments.getMsg());
				
				result = pstmt.executeUpdate();
			} catch (SQLException e) {
				e.printStackTrace();
			}finally {
				dbManager.release(con,pstmt);
			}
			return result;
		}
		
		//update
		public int update(Comments comments) {
			PreparedStatement pstmt = null;
			Connection con = null;
			int result = 0;
			
			String sql = "update news set author=?, msg=? where comments_id=?";
			
			con = dbManager.getConnection();
			try {
				pstmt = con.prepareStatement(sql);
				pstmt.setString(1, comments.getAuthor());
				pstmt.setString(2, comments.getMsg());
				pstmt.setInt(3, comments.getNews_id());
				
				result = pstmt.executeUpdate();
			} catch (SQLException e) {
				e.printStackTrace();
			}finally {
				dbManager.release(con,pstmt);
			}
			return result;
		}
		
		//select
		public News select(int news_id) {
			PreparedStatement pstmt = null;
			Connection con = null;
			ResultSet rs = null;
			News news = null;
			String sql = "select * from news where news_id=?";
			
			con = dbManager.getConnection();
			try {
				pstmt = con.prepareStatement(sql);
				pstmt.setInt(1, news_id);
				rs = pstmt.executeQuery();
				
				while(rs.next()) {
					news = new News();
					news.setNews_id(rs.getInt("news_id"));
					news.setTitle(rs.getString("title"));
					news.setWriter(rs.getString("writer"));
					news.setContent(rs.getString("content"));
					news.setRegdate(rs.getString("regdate"));
					news.setHit(rs.getInt("hit"));
				}
				
			} catch (SQLException e) {
				e.printStackTrace();
			}finally {
				dbManager.release(con, pstmt, rs);
			}
			return news;
		}
		
		//selectAll
		public List selectAll() {
			PreparedStatement pstmt = null;
			Connection con = null;
			ResultSet rs = null;
			ArrayList<News> list = null;
			String sql = "select * from news";
			
			con = dbManager.getConnection();
			try {
				pstmt = con.prepareStatement(sql);
				rs = pstmt.executeQuery();
				
				while(rs.next()) {
					News news = new News();
					news.setNews_id(rs.getInt("news_id"));
					news.setTitle(rs.getString("title"));
					news.setWriter(rs.getString("writer"));
					news.setContent(rs.getString("content"));
					news.setRegdate(rs.getString("regdate"));
					news.setHit(rs.getInt("hit"));
					list.add(news);
				}
				
			} catch (SQLException e) {
				e.printStackTrace();
			}finally {
				dbManager.release(con, pstmt, rs);
			}
			return list;
		}
		
		//delete
		public int delete(int news_id) {
			PreparedStatement pstmt = null;
			Connection con = null;
			int result = 0;
			String sql = "delete from news where news_id=?";
			
			con = dbManager.getConnection();
			try {
				pstmt = con.prepareStatement(sql);
				pstmt.setInt(1, news_id);
				
				result = pstmt.executeUpdate();
			} catch (SQLException e) {
				e.printStackTrace();
			}finally {
				dbManager.release(con, pstmt);
			}
			return result;
		}

}
